// <auto-generated />
using System;
using Doc415.Friends.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Doc415.Friends.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240811155700_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Doc415.Friends.Server.Models.FCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("35992ccc-8293-48f4-9ff0-e311413ba6c6"),
                            Name = "School"
                        },
                        new
                        {
                            Id = new Guid("2627e2a9-55e0-4cfb-afd7-64545d7cf41e"),
                            Name = "Work"
                        },
                        new
                        {
                            Id = new Guid("18d88db4-4bf1-4064-bb6f-a4c19db5e318"),
                            Name = "Social"
                        });
                });

            modelBuilder.Entity("Doc415.Friends.Server.Models.Friend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("LastContact")
                        .HasColumnType("date");

                    b.Property<string>("LastContactMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinRecontactInDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InCategoryId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("Doc415.Friends.Server.Models.Friend", b =>
                {
                    b.HasOne("Doc415.Friends.Server.Models.FCategory", "InCategory")
                        .WithMany("Friends")
                        .HasForeignKey("InCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InCategory");
                });

            modelBuilder.Entity("Doc415.Friends.Server.Models.FCategory", b =>
                {
                    b.Navigation("Friends");
                });
#pragma warning restore 612, 618
        }
    }
}
